/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SimpleRouteImport } from './routes/simple'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AdvancedRouteImport } from './routes/_advanced'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SimpleSettingsRouteImport } from './routes/simple.settings'
import { Route as SimpleOrderStatusRouteImport } from './routes/simple.order-status'
import { Route as SimpleOrderRouteImport } from './routes/simple.order'
import { Route as SimpleDrinksRouteImport } from './routes/simple.drinks'
import { Route as AdvancedUsersRouteImport } from './routes/_advanced.users'
import { Route as AdvancedSettingsRouteImport } from './routes/_advanced.settings'
import { Route as AdvancedPumpsRouteImport } from './routes/_advanced.pumps'
import { Route as AdvancedOrderRouteImport } from './routes/_advanced.order'
import { Route as AdvancedIngredientsRouteImport } from './routes/_advanced.ingredients'
import { Route as AdvancedGlassesRouteImport } from './routes/_advanced.glasses'
import { Route as AdvancedDrinksRouteImport } from './routes/_advanced.drinks'
import { Route as SimpleDrinkIdRouteImport } from './routes/simple.drink.$id'

const SimpleRoute = SimpleRouteImport.update({
  id: '/simple',
  path: '/simple',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AdvancedRoute = AdvancedRouteImport.update({
  id: '/_advanced',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const SimpleSettingsRoute = SimpleSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => SimpleRoute,
} as any)
const SimpleOrderStatusRoute = SimpleOrderStatusRouteImport.update({
  id: '/order-status',
  path: '/order-status',
  getParentRoute: () => SimpleRoute,
} as any)
const SimpleOrderRoute = SimpleOrderRouteImport.update({
  id: '/order',
  path: '/order',
  getParentRoute: () => SimpleRoute,
} as any)
const SimpleDrinksRoute = SimpleDrinksRouteImport.update({
  id: '/drinks',
  path: '/drinks',
  getParentRoute: () => SimpleRoute,
} as any)
const AdvancedUsersRoute = AdvancedUsersRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => AdvancedRoute,
} as any)
const AdvancedSettingsRoute = AdvancedSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AdvancedRoute,
} as any)
const AdvancedPumpsRoute = AdvancedPumpsRouteImport.update({
  id: '/pumps',
  path: '/pumps',
  getParentRoute: () => AdvancedRoute,
} as any)
const AdvancedOrderRoute = AdvancedOrderRouteImport.update({
  id: '/order',
  path: '/order',
  getParentRoute: () => AdvancedRoute,
} as any)
const AdvancedIngredientsRoute = AdvancedIngredientsRouteImport.update({
  id: '/ingredients',
  path: '/ingredients',
  getParentRoute: () => AdvancedRoute,
} as any)
const AdvancedGlassesRoute = AdvancedGlassesRouteImport.update({
  id: '/glasses',
  path: '/glasses',
  getParentRoute: () => AdvancedRoute,
} as any)
const AdvancedDrinksRoute = AdvancedDrinksRouteImport.update({
  id: '/drinks',
  path: '/drinks',
  getParentRoute: () => AdvancedRoute,
} as any)
const SimpleDrinkIdRoute = SimpleDrinkIdRouteImport.update({
  id: '/drink/$id',
  path: '/drink/$id',
  getParentRoute: () => SimpleRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/simple': typeof SimpleRouteWithChildren
  '/drinks': typeof AdvancedDrinksRoute
  '/glasses': typeof AdvancedGlassesRoute
  '/ingredients': typeof AdvancedIngredientsRoute
  '/order': typeof AdvancedOrderRoute
  '/pumps': typeof AdvancedPumpsRoute
  '/settings': typeof AdvancedSettingsRoute
  '/users': typeof AdvancedUsersRoute
  '/simple/drinks': typeof SimpleDrinksRoute
  '/simple/order': typeof SimpleOrderRoute
  '/simple/order-status': typeof SimpleOrderStatusRoute
  '/simple/settings': typeof SimpleSettingsRoute
  '/simple/drink/$id': typeof SimpleDrinkIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/simple': typeof SimpleRouteWithChildren
  '/drinks': typeof AdvancedDrinksRoute
  '/glasses': typeof AdvancedGlassesRoute
  '/ingredients': typeof AdvancedIngredientsRoute
  '/order': typeof AdvancedOrderRoute
  '/pumps': typeof AdvancedPumpsRoute
  '/settings': typeof AdvancedSettingsRoute
  '/users': typeof AdvancedUsersRoute
  '/simple/drinks': typeof SimpleDrinksRoute
  '/simple/order': typeof SimpleOrderRoute
  '/simple/order-status': typeof SimpleOrderStatusRoute
  '/simple/settings': typeof SimpleSettingsRoute
  '/simple/drink/$id': typeof SimpleDrinkIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_advanced': typeof AdvancedRouteWithChildren
  '/login': typeof LoginRoute
  '/simple': typeof SimpleRouteWithChildren
  '/_advanced/drinks': typeof AdvancedDrinksRoute
  '/_advanced/glasses': typeof AdvancedGlassesRoute
  '/_advanced/ingredients': typeof AdvancedIngredientsRoute
  '/_advanced/order': typeof AdvancedOrderRoute
  '/_advanced/pumps': typeof AdvancedPumpsRoute
  '/_advanced/settings': typeof AdvancedSettingsRoute
  '/_advanced/users': typeof AdvancedUsersRoute
  '/simple/drinks': typeof SimpleDrinksRoute
  '/simple/order': typeof SimpleOrderRoute
  '/simple/order-status': typeof SimpleOrderStatusRoute
  '/simple/settings': typeof SimpleSettingsRoute
  '/simple/drink/$id': typeof SimpleDrinkIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/simple'
    | '/drinks'
    | '/glasses'
    | '/ingredients'
    | '/order'
    | '/pumps'
    | '/settings'
    | '/users'
    | '/simple/drinks'
    | '/simple/order'
    | '/simple/order-status'
    | '/simple/settings'
    | '/simple/drink/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/simple'
    | '/drinks'
    | '/glasses'
    | '/ingredients'
    | '/order'
    | '/pumps'
    | '/settings'
    | '/users'
    | '/simple/drinks'
    | '/simple/order'
    | '/simple/order-status'
    | '/simple/settings'
    | '/simple/drink/$id'
  id:
    | '__root__'
    | '/'
    | '/_advanced'
    | '/login'
    | '/simple'
    | '/_advanced/drinks'
    | '/_advanced/glasses'
    | '/_advanced/ingredients'
    | '/_advanced/order'
    | '/_advanced/pumps'
    | '/_advanced/settings'
    | '/_advanced/users'
    | '/simple/drinks'
    | '/simple/order'
    | '/simple/order-status'
    | '/simple/settings'
    | '/simple/drink/$id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdvancedRoute: typeof AdvancedRouteWithChildren
  LoginRoute: typeof LoginRoute
  SimpleRoute: typeof SimpleRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/simple': {
      id: '/simple'
      path: '/simple'
      fullPath: '/simple'
      preLoaderRoute: typeof SimpleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_advanced': {
      id: '/_advanced'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AdvancedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/simple/settings': {
      id: '/simple/settings'
      path: '/settings'
      fullPath: '/simple/settings'
      preLoaderRoute: typeof SimpleSettingsRouteImport
      parentRoute: typeof SimpleRoute
    }
    '/simple/order-status': {
      id: '/simple/order-status'
      path: '/order-status'
      fullPath: '/simple/order-status'
      preLoaderRoute: typeof SimpleOrderStatusRouteImport
      parentRoute: typeof SimpleRoute
    }
    '/simple/order': {
      id: '/simple/order'
      path: '/order'
      fullPath: '/simple/order'
      preLoaderRoute: typeof SimpleOrderRouteImport
      parentRoute: typeof SimpleRoute
    }
    '/simple/drinks': {
      id: '/simple/drinks'
      path: '/drinks'
      fullPath: '/simple/drinks'
      preLoaderRoute: typeof SimpleDrinksRouteImport
      parentRoute: typeof SimpleRoute
    }
    '/_advanced/users': {
      id: '/_advanced/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AdvancedUsersRouteImport
      parentRoute: typeof AdvancedRoute
    }
    '/_advanced/settings': {
      id: '/_advanced/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AdvancedSettingsRouteImport
      parentRoute: typeof AdvancedRoute
    }
    '/_advanced/pumps': {
      id: '/_advanced/pumps'
      path: '/pumps'
      fullPath: '/pumps'
      preLoaderRoute: typeof AdvancedPumpsRouteImport
      parentRoute: typeof AdvancedRoute
    }
    '/_advanced/order': {
      id: '/_advanced/order'
      path: '/order'
      fullPath: '/order'
      preLoaderRoute: typeof AdvancedOrderRouteImport
      parentRoute: typeof AdvancedRoute
    }
    '/_advanced/ingredients': {
      id: '/_advanced/ingredients'
      path: '/ingredients'
      fullPath: '/ingredients'
      preLoaderRoute: typeof AdvancedIngredientsRouteImport
      parentRoute: typeof AdvancedRoute
    }
    '/_advanced/glasses': {
      id: '/_advanced/glasses'
      path: '/glasses'
      fullPath: '/glasses'
      preLoaderRoute: typeof AdvancedGlassesRouteImport
      parentRoute: typeof AdvancedRoute
    }
    '/_advanced/drinks': {
      id: '/_advanced/drinks'
      path: '/drinks'
      fullPath: '/drinks'
      preLoaderRoute: typeof AdvancedDrinksRouteImport
      parentRoute: typeof AdvancedRoute
    }
    '/simple/drink/$id': {
      id: '/simple/drink/$id'
      path: '/drink/$id'
      fullPath: '/simple/drink/$id'
      preLoaderRoute: typeof SimpleDrinkIdRouteImport
      parentRoute: typeof SimpleRoute
    }
  }
}

interface AdvancedRouteChildren {
  AdvancedDrinksRoute: typeof AdvancedDrinksRoute
  AdvancedGlassesRoute: typeof AdvancedGlassesRoute
  AdvancedIngredientsRoute: typeof AdvancedIngredientsRoute
  AdvancedOrderRoute: typeof AdvancedOrderRoute
  AdvancedPumpsRoute: typeof AdvancedPumpsRoute
  AdvancedSettingsRoute: typeof AdvancedSettingsRoute
  AdvancedUsersRoute: typeof AdvancedUsersRoute
}

const AdvancedRouteChildren: AdvancedRouteChildren = {
  AdvancedDrinksRoute: AdvancedDrinksRoute,
  AdvancedGlassesRoute: AdvancedGlassesRoute,
  AdvancedIngredientsRoute: AdvancedIngredientsRoute,
  AdvancedOrderRoute: AdvancedOrderRoute,
  AdvancedPumpsRoute: AdvancedPumpsRoute,
  AdvancedSettingsRoute: AdvancedSettingsRoute,
  AdvancedUsersRoute: AdvancedUsersRoute,
}

const AdvancedRouteWithChildren = AdvancedRoute._addFileChildren(
  AdvancedRouteChildren,
)

interface SimpleRouteChildren {
  SimpleDrinksRoute: typeof SimpleDrinksRoute
  SimpleOrderRoute: typeof SimpleOrderRoute
  SimpleOrderStatusRoute: typeof SimpleOrderStatusRoute
  SimpleSettingsRoute: typeof SimpleSettingsRoute
  SimpleDrinkIdRoute: typeof SimpleDrinkIdRoute
}

const SimpleRouteChildren: SimpleRouteChildren = {
  SimpleDrinksRoute: SimpleDrinksRoute,
  SimpleOrderRoute: SimpleOrderRoute,
  SimpleOrderStatusRoute: SimpleOrderStatusRoute,
  SimpleSettingsRoute: SimpleSettingsRoute,
  SimpleDrinkIdRoute: SimpleDrinkIdRoute,
}

const SimpleRouteWithChildren =
  SimpleRoute._addFileChildren(SimpleRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdvancedRoute: AdvancedRouteWithChildren,
  LoginRoute: LoginRoute,
  SimpleRoute: SimpleRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
